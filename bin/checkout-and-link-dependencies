#!/usr/bin/env bash

echo "checking out and linking deps in dir: "
pwd

DEPENDENCIES=( bullet_train-billing bullet_train-billing-usage)

mkdir deps

for dep in "${DEPENDENCIES[@]}"
do
  :

# TODO: Figure out how to get a branch list for a private repo. Maybe we have to clone the repo first and then switch branches?

# Look for a matching branch on the starter repository when running tests on CircleCI.
#CI_BRANCH=$CIRCLE_BRANCH
#if [[ -v CI_BRANCH ]]
#then
  ## Default to the main branch if we don't find a matching branch on the starter repository.
  #REPO_BRANCH="main"
  #BRANCH_NAMES_JSON=$(curl -H "Accept: application.vnd.github+json" https://api.github.com/repos/bullet-train-pro/bullet_train-billing/branches)
  #echo "This is what we're getting from the GitHub API:\n\n${BRANCH_NAMES_JSON}"
  #BRANCH_NAMES=$(echo $BRANCH_NAMES_JSON | jq -r '.[].name')
  #echo "These are the branches on the starter repo:\n\n${BRANCH_NAMES}"

  #for BRANCH in $BRANCH_NAMES; do
    #if [ ${BRANCH} == $CIRCLE_BRANCH ]
    #then
      #REPO_BRANCH=$BRANCH
      #break
    #fi
  #done

  #echo "Cloning from ${REPO_BRANCH}..."
  #git clone -b $REPO_BRANCH https://github.com/bullet-train-pro/bullet_train-billing.git .
#else
  git clone https://github.com/bullet-train-pro/$dep.git ./deps/$dep
#fi

cd deps/$dep
git branch -r
BRANCH_NAMES=$(git branch -r)
cd ..


grep -v "gem \"$dep\"" Gemfile > Gemfile.tmp
mv Gemfile.tmp Gemfile
echo "gem \"$dep\", path: \"./deps/$dep\"" >> Gemfile

cat Gemfile

done
